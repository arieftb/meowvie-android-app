apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'de.mannodermaus.android-junit5'

android {
    ndkVersion '21.1.6352462'
    defaultConfig {
        applicationId "id.my.arieftb.meowvie"

        compileSdkVersion rootProject.targetSdk
        minSdkVersion rootProject.minSdk
        targetSdkVersion rootProject.targetSdk

        versionCode 1
        versionName "1.0.0"

        buildConfigField("String", "API_KEY", "\"" + rootProject.API_KEY + "\"")
        buildConfigField("String", "BASE_URL", "\""+ "https://api.themoviedb.org/3/" + "\"")
        buildConfigField("String", "BASE_URL_IMAGE_PORTRAIT", "\""+ "https://www.themoviedb.org/t/p/w220_and_h330_face/" + "\"")
        buildConfigField("String", "BASE_URL_IMAGE_PORTRAIT_BIG", "\""+ "https://www.themoviedb.org/t/p/w440_and_h660_face/" + "\"")
        buildConfigField("String", "BASE_URL_IMAGE_LANDSCAPE", "\""+ "https://www.themoviedb.org/t/p/w1920_and_h800_multi_faces/" + "\"")

//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "id.my.arieftb.meowvie.helper.MeowViewTestRunner"
    }
    buildTypes {
        release {
            testCoverageEnabled false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        applicationVariants.all{
            variant ->
                variant.outputs.each{
                    output->
                        project.ext { appName = 'meowvie' }
                        def formattedDate = new Date().format('yyyyMMddHHmmss')
                        def newName = output.outputFile.name
                        newName = newName.replace("app-", formattedDate + "-$project.ext.appName-")
                        newName = newName.replace("-debug", "-debug")
                        newName = newName.replace("-release", "-release")
                        output.outputFileName  = newName
                }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    kapt {
        correctErrorTypes true
    }
    hilt {
        enableExperimentalClasspathAggregation = true
    }
    lintOptions {
        checkReleaseBuilds false
    }
    dynamicFeatures = [':favorite']
}

dependencies {
    api project(":core")

    implementation dep.kotlin.lib
    implementation dep.kotlin.coroutineCore
    implementation dep.kotlin.coroutineAndroid
    implementation dep.kotlin.ktx
    testImplementation dep.kotlin.junit
    testImplementation dep.kotlin.reflect
    testImplementation dep.kotlin.coroutineTest

    implementation dep.android.appCompat
    implementation dep.android.material
    implementation dep.android.viewModel
    implementation dep.android.paging
    testImplementation dep.android.pagingTest

    implementation dep.navigation.fragment
    implementation dep.navigation.ui
    implementation dep.navigation.dynamicFeatureFragment
    debugImplementation dep.navigation.fragmentTesting

    implementation dep.sizeUnit.sdp
    implementation dep.sizeUnit.ssp
    implementation dep.loading.shimmer
    implementation dep.image.coil

    implementation dep.dependencyInjection.hilt
    kapt dep.dependencyInjection.hiltCompiler
    // For instrumented tests.
    androidTestImplementation dep.dependencyInjection.hiltTesting
    // ...with Kotlin.
    kaptAndroidTest dep.dependencyInjection.hiltTestingCompiler
    // ...with Java.
    androidTestAnnotationProcessor dep.dependencyInjection.hiltTestingCompiler

    implementation dep.remote.retrofit
    implementation dep.remote.retrofitGson
    implementation dep.remote.loggingInterceptor

    implementation dep.local.room
    kapt dep.local.roomCompiler
    androidTestImplementation dep.local.roomTest

    testImplementation dep.unitTest.spekDsl
    testImplementation dep.unitTest.spekRunner
    testImplementation dep.unitTest.mockk
    androidTestImplementation dep.unitTest.mockkAndroid
    testImplementation dep.unitTest.mockkJvm
    testImplementation dep.unitTest.mockito
    testImplementation dep.unitTest.mockitoKotlin
    testImplementation dep.unitTest.googleTruth
//    implementation dep.unitTest.hamcrest
    testImplementation dep.unitTest.junit
    androidTestImplementation dep.unitTest.extJunit

    androidTestImplementation dep.instrumentTest.espresso
    androidTestImplementation dep.instrumentTest.espressoContrib
    implementation dep.instrumentTest.espressoIdling
    androidTestImplementation dep.instrumentTest.rules
    androidTestImplementation dep.instrumentTest.runner
    testImplementation dep.instrumentTest.archCore
    androidTestImplementation dep.instrumentTest.archCore

    debugImplementation dep.logging.leakCanary
}